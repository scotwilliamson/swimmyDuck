package application;

import java.awt.Component;
import java.awt.event.ActionListener;
import javafx.scene.control.*;
import javafx.animation.AnimationTimer;
import javafx.application.Application;
import javafx.application.Platform;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.stage.Stage;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.layout.BorderPane;
import javafx.scene.paint.Color;
import javafx.scene.shape.Circle;

public class Main extends Application {
	private javafx.scene.control.Button closeButton;

	@Override
	public void start(Stage primaryStage) {
		try {
			BorderPane root = new BorderPane();
			Scene scene = new Scene(root, 400, 600);

			Button sgame = new Button("Start Game!");
			sgame.resize(400, 200);

			Button highs = new Button("High Scores!");
			highs.resize(400, 200);
			highs.setLayoutX(0);
			highs.setLayoutY(200);

			Button exit = new Button("Exit Game :(");
			exit.resize(400, 200);
			exit.setLayoutX(0);
			exit.setLayoutY(400);
			root.getChildren().addAll(exit, sgame, highs);

			sgame.setOnAction(new EventHandler<ActionEvent>() {
				@Override
				public void handle(ActionEvent event) {
					root.getChildren().remove(sgame);
					root.getChildren().remove(exit);
					root.getChildren().remove(highs);

				}
			});
			highs.setOnAction(new EventHandler<ActionEvent>() {
				@Override
				public void handle(ActionEvent event) {
					root.getChildren().remove(sgame);
					root.getChildren().remove(exit);
					root.getChildren().remove(highs);
					Label num1 = new Label("1");
					num1.resize(200, 45);
					Label num2 = new Label("2");
					num2.resize(200, 45);
					num2.setLayoutX(0);
					num2.setLayoutY(45);
					Label num3 = new Label("3");
					num3.resize(200, 45);
					num3.setLayoutX(0);
					num3.setLayoutY(90);
					Label num4 = new Label("4");
					num4.resize(200, 45);
					num4.setLayoutX(0);
					num4.setLayoutY(135);
					Label num5 = new Label("5");
					num5.resize(200, 45);
					num5.setLayoutX(0);
					num5.setLayoutY(180);
					Label num6 = new Label("6");
					num6.resize(200, 45);
					num6.setLayoutX(0);
					num6.setLayoutY(225);
					Label num7 = new Label("7");
					num7.resize(200, 45);
					num7.setLayoutX(0);
					num7.setLayoutY(270);
					Label num8 = new Label("8");
					num8.resize(200, 45);
					num8.setLayoutX(0);
					num8.setLayoutY(315);
					Label num9 = new Label("9");
					num9.resize(200, 45);
					num9.setLayoutX(0);
					num9.setLayoutY(360);
					Label num10 = new Label("10");
					num10.resize(200, 45);
					num10.setLayoutX(0);
					num10.setLayoutY(405);
					Button main = new Button("Main Menu!");
					main.resize(100, 100);
					main.setLayoutX(150);
					main.setLayoutY(500);
					main.setOnAction(new EventHandler<ActionEvent>() {
						@Override
						public void handle(ActionEvent event) {
							root.getChildren().remove(num1);
							root.getChildren().remove(num2);
							root.getChildren().remove(num3);
							root.getChildren().remove(num4);
							root.getChildren().remove(num5);
							root.getChildren().remove(num6);
							root.getChildren().remove(num7);
							root.getChildren().remove(num8);
							root.getChildren().remove(num9);
							root.getChildren().remove(num10);
							root.getChildren().remove(main);
							root.getChildren().addAll(sgame, exit, highs);

						}
					});
					root.getChildren().addAll(num1, num2, num3, num4, num5, num6, num7, num8, num9, num10, main);
				}
			});
			exit.setOnAction(new EventHandler<ActionEvent>() {
				@Override
				public void handle(ActionEvent event) {
					Platform.exit();

				}
			});
			primaryStage.setScene(scene);
			primaryStage.show();

		} catch (Exception e) {
			e.printStackTrace();
		}
		new AnimationTimer() {
			public void handle(long currentNanoTime) {
				update();
			}
		}.start();
	}

	private static class Player extends GameObject {
		Player() {
			super(new Circle(15, 15, 15, Color.ORANGE));
		}
	}

	public static void update() {

	}

	public static void main(String[] args) {
		launch(args);
	}
}
